1. Write the following classes: (23/25)

	org.enmas.pomdp				POMDP						√
								State						√
								<type aliases>				√

	org.enmas.client			Client						√
								ClientManager				√
								Agent						√

	org.enmas.client.gui		ClientGUI					
								GraphicsPlugin				√

	org.enmas.server			ServerManager				√
								Server						√
								Host						√
								Logger						√
								POMDPIteration				√
								ClientManagerRef			√
								AgentRef					√

	org.enmas.messaging			MessageBundle				√
								Message						√
								RegisterHost				√
								ConfirmHostRegistration		√
								DenyHostRegistration		√
								RegisterAgent				√
								ConfirmAgentRegistration	√
								DenyAgentRegistration		√
								TakeAction					√
								UpdateAgent					√

2. Figure out where Server.iterate() is called... perhaps preStart() and quasi-recursively from receive?

3. Update design diagrams to reflect prototyped code

4. Document all code, as was done with previous prototype

5. Test!
	- check out the scala.testing.Benchmark trait.  Supposedly just implement run() and get perf data

6. Add encryption layer:
	- RSA key generation
	- Host registration & persistent storage
	- Symmetric key encrypt / decrypt
	- Probably manual unserialization
